import {Component, OnInit} from '@angular/core';
import {Form, FormBuilder, FormGroup} from "@angular/forms";
import {ZerowasteFormService} from "../../service/zerowaste-form.service";

@Component({
  selector: 'app-checkout',
  templateUrl: './checkout.component.html',
  styleUrls: ['./checkout.component.css']
})
export class CheckoutComponent implements OnInit{

    checkoutFormGroup:FormGroup;

    totalPrice:number=0;
    totalQuantity:number=0;

    creditCardYears:number[]=[];
    creditCardMonth:number[]=[];


    // qita posht chat gpt se kshtu se di pse me bo qashtu

  constructor(private formBuilder: FormBuilder,private zeroWasteService:ZerowasteFormService) {
    this.checkoutFormGroup = this.formBuilder.group({
      customer: this.formBuilder.group({
        firstName: [''],
        lastName: [''],
        email: ['']
      })
    });
  }

  ngOnInit():void {
      this.checkoutFormGroup=this.formBuilder.group({
        customer:this.formBuilder.group({
          firstName:[''],
          lastName:[''],
          email:['']
        }),
        shippingAddress:this.formBuilder.group({
          country:[''],
          street:[''],
          city:[''],
          state:[''],
          zipCode:[''],

        }),
        billingAddress:this.formBuilder.group({
          country:[''],
          street:[''],
          city:[''],
          state:[''],
          zipCode:[''],
        }),
        creditCard:this.formBuilder.group({
          cartType:[''],
          nameOnCard:[''],
          cardNumber:[''],
          securityCode:[''],
          expirationMonth:[''],
          expirationYear:[''],
        })
      });

      const startMonth:number = new Date().getMonth()+1;
      console.log("StartMonth: " + startMonth);

      this.zeroWasteService.getCreditCardMonths(startMonth).subscribe(
        data=>{
          console.log("Retrieved credit card month" + JSON.stringify(data));
          this.creditCardMonth = data;
        }
      )

      this.zeroWasteService.getCreditCardYears().subscribe(
        data=>{
          console.log("Retrived credit card years: "+ JSON.stringify(data));
          this.creditCardYears=data;
        }
      )
    }
    onSubmit(){
      console.log("Handling the submit button")
      console.log(this.checkoutFormGroup.get('customer')?.value);
      console.log(this.checkoutFormGroup.get('customer')?.value.email);
    }

  copyShippingAddresToBillingAddres({event}: { event: any }) {
    if ((event.target as HTMLInputElement).checked) {
      const shippingAddressValue = this.checkoutFormGroup.controls['shippingAddress'].value;
      this.checkoutFormGroup.controls['billingAddress'].setValue(shippingAddressValue);
    } else {
      this.checkoutFormGroup.controls['billingAddress'].reset();
    }
  }


}
